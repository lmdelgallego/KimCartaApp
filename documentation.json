{
    "pipes": [],
    "interfaces": [
        {
            "name": "Client",
            "id": "interface-Client-424e1bead97794e1899cce554385c33b5ca0cf954ca30de5a2cb9fca7a6e5124ee88731869eb6930d4efc732054e47d56b596efd2cf49675bb958158476f68b2",
            "file": "src/app/pages/dashboard/dashboard.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\n\n\nexport interface Client {\n  name: string;\n  lastName: string;\n  email: string;\n  status: string;\n}\n\nconst ELEMENT_DATA: Client[] = [\n  { name: 'John', lastName: 'Doe', email: 'john@doe.com', status: 'accepted' },\n  { name: 'Jack', lastName: 'Makee', email: 'jack@makee.com', status: 'accepted' },\n  { name: 'Lucas', lastName: 'Lopez', email: 'lucas@lopez.com', status: 'declined' },\n  { name: 'Mary', lastName: 'Johnson', email: 'mary@johnson.com', status: 'declined' },\n  { name: 'June', lastName: 'Mayer', email: 'jun@mayer.com', status: 'declined' },\n  { name: 'Charles', lastName: 'Power', email: 'charles@power.com', status: 'accepted' },\n];\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent {\n  panelOpenState = false;\n  displayedColumns: string[] = [\n    'name',\n    'lastName',\n    'email',\n    'status',\n    'actions',\n  ];\n  dataSource = ELEMENT_DATA;\n\n  filters: string[] = ['accepted', 'declined'];\n\n  constructor() {}\n\n  changeFilter = (filter: string) => {\n    console.log(filter);\n  };\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "FilterStatusType",
            "id": "interface-FilterStatusType-2aebcf62987668081a5d057e1b402d35bc622f48c47450d68be85e128d8db8fd880dff245e2c97fdf60e8f38283cf5c1ad07297cedd8786b38191d38045f6d14",
            "file": "src/app/components/ui/filter/filter.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\ninterface FilterStatusType {\n  [key: string]: any;\n}\n\n@Component({\n  selector: 'kc-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent {\n\n  @Input('label') label: string = 'Filter';\n  @Input('options') options: string[] = [];\n  @Output('selected') onSelectFilter: EventEmitter<string> = new EventEmitter<string>();\n\n\n  status: string = '';\n\n  getOptionLabel(option: string) {\n    return option[0].toUpperCase() + option.slice(1);\n  }\n\n  changeSelected(status: string) {\n\n    if (this.status === status) {\n      this.status = '';\n      this.onSelectFilter.emit();\n      return;\n    }\n    this.status = status;\n    this.onSelectFilter.emit(status);\n  }\n}\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-2aebcf62987668081a5d057e1b402d35bc622f48c47450d68be85e128d8db8fd880dff245e2c97fdf60e8f38283cf5c1ad07297cedd8786b38191d38045f6d14",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 178,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d9c42d3a62aaf83dbb6447e243e89548a50be64dd3f0430644a498fc0b57c878cc14f3501769ab8c0004fcca2936abd3d94d5eb6524a37c681e5e1457d52e57a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'KimCartaApp'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'KimCartaApp';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "BaseComponent",
            "id": "component-BaseComponent-aead5be1246d278a69987986fce23a14434a241a1f41f897fe4345aa786ebe605f61fc3ded38928737d7ad4ca5223152013233c18873877b15aaf06ae5b88d85",
            "file": "src/app/components/layout/base/base.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kc-layout-base",
            "styleUrls": [
                "./base.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'kc-layout-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".base-layout{\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    .main{\n      display: inline-flex;\n      flex: 1;\n      height: calc(100% - 64px );\n      margin: 0 auto;\n      width: 100%;\n      max-width: 1024px;\n    }\n}\n\n\n.sidenav-container{\n  flex: 1;\n}\n\n\n.sidenav-sidebar{\n  border-right: 1px solid var(--border-color);\n  border-left: 1px solid var(--border-color);\n  padding: 2.25rem 0 0 0;\n}\n\n.page-content{\n  background-color: white;\n  padding: 2.75rem 1.5rem;\n}\n",
                    "styleUrl": "./base.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"base-layout\">\n  <app-header></app-header>\n  <div class=\"main\">\n    <mat-sidenav-container class=\"sidenav-container\">\n      <mat-sidenav mode=\"side\" class=\"sidenav-sidebar\" opened>\n        <app-sidebar></app-sidebar>\n      </mat-sidenav>\n      <mat-sidenav-content class=\"page-content\">\n        <ng-content></ng-content>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a53fd738b978780d39fb5fcc9ae4cfe0088e57a1f6ce674862d57dab9192140bd1c05548a9910db0469a431142886e658ff2e761f15781b2ad430e58d64724d0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 786,
                            "end": 799,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 330,
                            "tagName": {
                                "pos": 787,
                                "end": 795,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 34,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 50
                    }
                }
            }
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-424e1bead97794e1899cce554385c33b5ca0cf954ca30de5a2cb9fca7a6e5124ee88731869eb6930d4efc732054e47d56b596efd2cf49675bb958158476f68b2",
            "file": "src/app/pages/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "changeFilter",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[\n    'name',\n    'lastName',\n    'email',\n    'status',\n    'actions',\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "filters",
                    "defaultValue": "['accepted', 'declined']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n\nexport interface Client {\n  name: string;\n  lastName: string;\n  email: string;\n  status: string;\n}\n\nconst ELEMENT_DATA: Client[] = [\n  { name: 'John', lastName: 'Doe', email: 'john@doe.com', status: 'accepted' },\n  { name: 'Jack', lastName: 'Makee', email: 'jack@makee.com', status: 'accepted' },\n  { name: 'Lucas', lastName: 'Lopez', email: 'lucas@lopez.com', status: 'declined' },\n  { name: 'Mary', lastName: 'Johnson', email: 'mary@johnson.com', status: 'declined' },\n  { name: 'June', lastName: 'Mayer', email: 'jun@mayer.com', status: 'declined' },\n  { name: 'Charles', lastName: 'Power', email: 'charles@power.com', status: 'accepted' },\n];\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent {\n  panelOpenState = false;\n  displayedColumns: string[] = [\n    'name',\n    'lastName',\n    'email',\n    'status',\n    'actions',\n  ];\n  dataSource = ELEMENT_DATA;\n\n  filters: string[] = ['accepted', 'declined'];\n\n  constructor() {}\n\n  changeFilter = (filter: string) => {\n    console.log(filter);\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "templateData": "<h1 class=\"text-color-primary mb-2\">Welcome Home</h1>\n\n\n<kc-section title=\"Frequent Asked Questions\">\n\n  <!-- Expansion module -->\n  <mat-accordion>\n    <mat-expansion-panel style=\"margin-bottom: 8px;\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Question 1\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <p>This is the primary content of the panel.</p>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel style=\"margin-bottom: 8px;\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Question 2\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <p>This is the primary content of the panel.</p>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n\n</kc-section>\n\n<kc-section title=\"Table\">\n\n  <kc-filter sectionActionHeader (selected)=\"changeFilter($event)\" label=\"Select filter\" [options]=\"filters\" ></kc-filter>\n\n  <mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z1\">\n\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"lastName\">\n      <mat-header-cell *matHeaderCellDef> Last Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.lastName}} </mat-cell>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell *matHeaderCellDef> Email </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"status\">\n      <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.status}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef aria-label=\"row actions\">&nbsp;</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        share\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n</kc-section>\n\n\n<kc-section title=\"Explore similar cards\">\n</kc-section>\n"
        },
        {
            "name": "FilterComponent",
            "id": "component-FilterComponent-2aebcf62987668081a5d057e1b402d35bc622f48c47450d68be85e128d8db8fd880dff245e2c97fdf60e8f38283cf5c1ad07297cedd8786b38191d38045f6d14",
            "file": "src/app/components/ui/filter/filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kc-filter",
            "styleUrls": [
                "./filter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Filter'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "status",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "changeSelected",
                    "args": [
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "status",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOptionLabel",
                    "args": [
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\ninterface FilterStatusType {\n  [key: string]: any;\n}\n\n@Component({\n  selector: 'kc-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent {\n\n  @Input('label') label: string = 'Filter';\n  @Input('options') options: string[] = [];\n  @Output('selected') onSelectFilter: EventEmitter<string> = new EventEmitter<string>();\n\n\n  status: string = '';\n\n  getOptionLabel(option: string) {\n    return option[0].toUpperCase() + option.slice(1);\n  }\n\n  changeSelected(status: string) {\n\n    if (this.status === status) {\n      this.status = '';\n      this.onSelectFilter.emit();\n      return;\n    }\n    this.status = status;\n    this.onSelectFilter.emit(status);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".kc-filter{\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-start;\n  &-label{\n    margin-right: 0.5rem;\n    font-size: 0.875rem;\n    font-weight: 400;\n    color: var(--text-color);\n\n  }\n\n  &-items{\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 0.375rem;\n  }\n}\n\n\n.kc-filter-chip {\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 400;\n  --mdc-chip-elevated-container-color: rgba(0, 98, 129, 0.05);\n\n  &.active {\n    background-color: var(--primary);\n    --mdc-chip-label-text-color: #fff;\n\n    .kc-filter-chip-content {\n      span {\n        margin-right: 0.5rem;\n      }\n    }\n  }\n\n  &-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n\n  }\n\n  &-remove {\n    color: white;\n    height: 18px;\n    width: 18px;\n    font-size: 18px;\n  }\n}\n",
                    "styleUrl": "./filter.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"kc-filter\">\n  <span class=\"kc-filter-label\">{{label}}:</span>\n  <div class=\"kc-filter-items\">\n\n    <mat-chip *ngFor=\" let option of options \"\n    (click)=\"changeSelected(option)\" role=\"button\" class=\"kc-filter-chip\" [class.active]=\"status == option\" >\n      <div class=\"kc-filter-chip-content\">\n        <span>{{getOptionLabel(option)}}</span>\n        <mat-icon class=\"kc-filter-chip-remove\" *ngIf=\"status == option\" >cancel</mat-icon>\n      </div>\n    </mat-chip>\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-baa6f1e1884016686299891336046df42f1901ff07c5282c0fc5a1a8a53691ee057b6ac78066e221dfb300978f96324b07ce32407df543404604b0b144188f82",
            "file": "src/app/components/ui/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".bg-white{\n  background-color: #fff;\n  border: 1px solid #DADADA;\n  padding: 20px 24px;\n  height: auto;\n}\n\n.logo{\n  height: 1rem;\n\n  img{\n    height: inherit\n  }\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-toolbar class=\"bg-white\">\n  <a routerLink=\"/dashboard\" class=\"logo\">\n    <img src=\"assets/logo.svg\" alt=\"logo\" />\n  </a>\n</mat-toolbar>\n"
        },
        {
            "name": "PagesComponent",
            "id": "component-PagesComponent-555a7a21087f8270cc5a57058b16b163b93bfa8a3f0b4e6119b6675e94d67aec53558096710a6b6f76a9cb9773de4522e890226c8ce0e7f1d61b16f6d79f9738",
            "file": "src/app/pages/pages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pages",
            "styleUrls": [],
            "styles": [
                "\n      .main-content {\n        height: calc(100% - 65px);\n        max-width: 1024px;\n        margin: 0 auto;\n      }\n\n      .content{\n        height: 100%;\n      }\n      .page-content{\n        padding: 44px 24px;\n      }\n    "
            ],
            "templateUrl": [
                "./pages.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styles: [\n    `\n      .main-content {\n        height: calc(100% - 65px);\n        max-width: 1024px;\n        margin: 0 auto;\n      }\n\n      .content{\n        height: 100%;\n      }\n      .page-content{\n        padding: 44px 24px;\n      }\n    `\n  ]\n})\nexport class PagesComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .main-content {\n        height: calc(100% - 65px);\n        max-width: 1024px;\n        margin: 0 auto;\n      }\n\n      .content{\n        height: 100%;\n      }\n      .page-content{\n        padding: 44px 24px;\n      }\n    \n",
            "templateData": "<kc-layout-base>\n  <router-outlet></router-outlet>\n</kc-layout-base>\n"
        },
        {
            "name": "SectionComponent",
            "id": "component-SectionComponent-ab4f5b282976af962c5accd3d8eb019cc8572301cb41a7347016dcabb1321d9b801e33d9c5669cfba4b0fb65bf49158dc901633a86f3157c1faf7a52b6828d9e",
            "file": "src/app/components/layout/section/section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "kc-section",
            "styleUrls": [
                "./section.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./section.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'kc-section',\n  templateUrl: './section.component.html',\n  styleUrls: ['./section.component.scss']\n})\nexport class SectionComponent {\n\n  @Input('title') title: string = '';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".kc-section-header{\n  display: flex;\n  justify-content: space-between;\n}\n",
                    "styleUrl": "./section.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"kc-section mb-3\">\n  <div class=\"kc-section-header mb-1\">\n    <h2 class=\"text-color-primary\">{{title}}</h2>\n    <ng-content select=\"[sectionActionHeader]\"></ng-content>\n  </div>\n\n  <div class=\"kc-section-body\">\n    <ng-content></ng-content>\n  </div>\n</section>\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-a713ba410a5e4c7e03a1fc1ec9947b26ecf9b7813c56cb138e02a414d7935ff75f46323efed1b333d17ed30894387f8c48aa2e8fc13de63f50a36e84e26f2e15",
            "file": "src/app/components/ui/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sidebar-container{\n  padding: 34px 0 0 0;\n  width: 169px;\n}\n\n\n.nav-link{\n  padding: 8px 24px;\n  font-size: 18px;\n  font-weight: 900;\n  line-height: 24px;\n  min-width: 143px;\n  max-width: 100%;\n  display: block;\n  text-decoration: none;\n  position: relative;\n  margin-bottom: 8px;\n  transition: all 0.3s ease-in-out;\n  &.active, &:hover {\n    border-left-width: 3px;\n    border-left-color: var(--primary);\n    color: var(--primary);\n\n    &::before{\n      width: 3px;\n    }\n  }\n\n  &::before{\n    content: '';\n    display: inline-block;\n    width: 0px;\n    height: 100%;\n    position: absolute;\n    background-color: var(--primary);\n    top: 0;\n    left: 0;\n    transition: all 0.3s ease-in-out;\n  }\n}\n",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n    <a class=\"nav-link\" routerLink=\"/dashboard\"  routerLinkActive=\"active\">\n      <span>Home</span>\n    </a>\n    <!-- <a class=\"nav-link\" routerLink=\"/otherPage\"  routerLinkActive=\"active\">\n      <span>Second page</span>\n    </a> -->\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-43b12da13099ef0526a9d4e3ca080eff64c078096c33b3f6120837e76f22a9de87f5650f38a677aa1d7f61123219d98a06badc318a550c02d113b81f541217b4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UiModule } from './components/ui/ui.module';\nimport { PagesModule } from './pages/pages.module';\nimport { LayoutModule } from './components/layout/layout.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    UiModule,\n    PagesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "LayoutModule"
                        },
                        {
                            "name": "PagesModule"
                        },
                        {
                            "name": "UiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-ed1d0e9a17f35f4d50b5c94e49c978df4a5db06f6c1ac3e269c34772f285bc6922c94f9c73ad08d2ab2e5e279a65f9e242a381197632eebfeb0c7d341ad2c94d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PagesRoutingModule } from './pages/pages.routing';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  {path:'**',redirectTo :'/404'}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    PagesRoutingModule\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "PagesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LayoutModule",
            "id": "module-LayoutModule-01f2d10fe9569d33aba5260117bc6732bc768988ce2ede07cb75329d5d5043c20b8fa23bb6534f2ee43806d219a05634468fb0f7316cca8f7f9b7d3f89bf995e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/layout/layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseComponent } from './base/base.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { UiModule } from '../ui/ui.module';\nimport { SectionComponent } from './section/section.component';\n\n\n\n@NgModule({\n  declarations: [\n    BaseComponent,\n    SectionComponent\n  ],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    UiModule\n  ],\n  exports: [\n    BaseComponent,\n    SectionComponent,\n  ]\n})\nexport class LayoutModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BaseComponent"
                        },
                        {
                            "name": "SectionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "UiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BaseComponent"
                        },
                        {
                            "name": "SectionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesModule",
            "id": "module-PagesModule-3fdfeee6a879ae9b678d5127b62f82e262969e59e8de6918ceb0ca16d1361def01ef2de15b44814b66bdea7508ff2aa162118508e569940ac8d216218cb1c664",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/pages.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { PagesComponent } from './pages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PagesRoutingModule } from './pages.routing';\nimport { UiModule } from '../components/ui/ui.module';\n\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { LayoutModule } from '../components/layout/layout.module';\n\n@NgModule({\n  declarations: [PagesComponent, DashboardComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    PagesRoutingModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatChipsModule,\n    LayoutModule,\n    UiModule,\n  ],\n  exports: [PagesComponent, DashboardComponent],\n})\nexport class PagesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "PagesComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LayoutModule"
                        },
                        {
                            "name": "PagesRoutingModule"
                        },
                        {
                            "name": "UiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "PagesComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesRoutingModule",
            "id": "module-PagesRoutingModule-3ce2215eec6f8a54fec5ecef3559af258495d4cd3a7d5c7995ab6af5c7deded4d055c84f241b1a0807f7bc5ce74a927457b4808908c5cb2b19b74e37ba4b2bf8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/pages/pages.routing.ts",
            "methods": [],
            "sourceCode": "import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { PagesComponent } from \"./pages.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\n\nconst routes: Routes = [\n  {\n    path: \"dashboard\",\n    component: PagesComponent,\n    children: [\n      { path: '', component: DashboardComponent }\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UiModule",
            "id": "module-UiModule-75bee7ed927109454a8e3e999290c20a72ff980db56118f4d9daedb0b45f88706cf7567b31b4c1049c257e71aa1c8031bbd1a08e70ce25079f23bba5425c4500",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/ui/ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { RouterModule } from '@angular/router';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FilterComponent } from './filter/filter.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    SidebarComponent,\n    FilterComponent\n  ],\n  exports: [\n    HeaderComponent,\n    SidebarComponent,\n    FilterComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatChipsModule,\n    MatIconModule\n  ]\n})\nexport class UiModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FilterComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FilterComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/layout/section/Section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: SectionComponent) => ({\n    props: args,\n    template: `\n      <kc-section title=\"Section Title\">\n        <p>Section content</p>\n      </kc-section>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/filter/Filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Filter',\n    options: ['active', 'completed'],\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/SideBar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/pages/dashboard/dashboard.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Client[]",
                "defaultValue": "[\n  { name: 'John', lastName: 'Doe', email: 'john@doe.com', status: 'accepted' },\n  { name: 'Jack', lastName: 'Makee', email: 'jack@makee.com', status: 'accepted' },\n  { name: 'Lucas', lastName: 'Lopez', email: 'lucas@lopez.com', status: 'declined' },\n  { name: 'Mary', lastName: 'Johnson', email: 'mary@johnson.com', status: 'declined' },\n  { name: 'June', lastName: 'Mayer', email: 'jun@mayer.com', status: 'declined' },\n  { name: 'Charles', lastName: 'Power', email: 'charles@power.com', status: 'accepted' },\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Button>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/layout/section/Section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SectionComponent>",
                "defaultValue": "{\n  title: 'LAYOUT/Section',\n  tags: ['LAYOUT', 'autodocs'],\n  component: SectionComponent,\n  render: (args) => ({ props: args }),\n  parameters: {},\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n  title: 'UI/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      imports: [MatToolbarModule],\n    }),\n  ],\n  parameters: {\n    // layout: 'fullscreen',\n  },\n  argTypes: {\n    // color: {\n    //   options: ['primary', 'accent', 'warn'],\n    //   control: { type: 'radio' },\n    // },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/filter/Filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FilterComponent>",
                "defaultValue": "{\n  title: 'COMPONENTS/Filter',\n  component: FilterComponent,\n  tags: ['UI', 'Filter', 'autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      imports: [MatIconModule, MatChipsModule],\n    }),\n  ],\n  parameters: {\n    // layout: 'fullscreen',\n  },\n  argTypes: {\n    options: {\n      defaultValue: ['all', 'active', 'completed'],\n      control: {\n        type: 'array',\n\n      },\n    },\n\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/ui/sidebar/SideBar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SidebarComponent>",
                "defaultValue": "{\n  title: 'UI/Sidebar',\n  component: SidebarComponent,\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      imports: [MatSidenavModule],\n    }),\n  ],\n  parameters: {\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Button>",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SectionComponent>",
                "file": "src/app/components/layout/section/Section.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "src/app/components/ui/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FilterComponent>",
                "file": "src/app/components/ui/filter/Filter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SidebarComponent>",
                "file": "src/app/components/ui/sidebar/SideBar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/layout/section/Section.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/layout/section/Section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: SectionComponent) => ({\n    props: args,\n    template: `\n      <kc-section title=\"Section Title\">\n        <p>Section content</p>\n      </kc-section>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/layout/section/Section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SectionComponent>",
                    "defaultValue": "{\n  title: 'LAYOUT/Section',\n  tags: ['LAYOUT', 'autodocs'],\n  component: SectionComponent,\n  render: (args) => ({ props: args }),\n  parameters: {},\n  decorators: [\n    moduleMetadata({\n      imports: [CommonModule],\n    }),\n  ],\n}"
                }
            ],
            "src/app/components/ui/header/Header.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n  title: 'UI/Header',\n  component: HeaderComponent,\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      imports: [MatToolbarModule],\n    }),\n  ],\n  parameters: {\n    // layout: 'fullscreen',\n  },\n  argTypes: {\n    // color: {\n    //   options: ['primary', 'accent', 'warn'],\n    //   control: { type: 'radio' },\n    // },\n  },\n}"
                }
            ],
            "src/app/components/ui/filter/Filter.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/filter/Filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Filter',\n    options: ['active', 'completed'],\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/filter/Filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FilterComponent>",
                    "defaultValue": "{\n  title: 'COMPONENTS/Filter',\n  component: FilterComponent,\n  tags: ['UI', 'Filter', 'autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      imports: [MatIconModule, MatChipsModule],\n    }),\n  ],\n  parameters: {\n    // layout: 'fullscreen',\n  },\n  argTypes: {\n    options: {\n      defaultValue: ['all', 'active', 'completed'],\n      control: {\n        type: 'array',\n\n      },\n    },\n\n  },\n}"
                }
            ],
            "src/app/components/ui/sidebar/SideBar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/SideBar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/ui/sidebar/SideBar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SidebarComponent>",
                    "defaultValue": "{\n  title: 'UI/Sidebar',\n  component: SidebarComponent,\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      imports: [MatSidenavModule],\n    }),\n  ],\n  parameters: {\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/app/pages/dashboard/dashboard.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/pages/dashboard/dashboard.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Client[]",
                    "defaultValue": "[\n  { name: 'John', lastName: 'Doe', email: 'john@doe.com', status: 'accepted' },\n  { name: 'Jack', lastName: 'Makee', email: 'jack@makee.com', status: 'accepted' },\n  { name: 'Lucas', lastName: 'Lopez', email: 'lucas@lopez.com', status: 'declined' },\n  { name: 'Mary', lastName: 'Johnson', email: 'mary@johnson.com', status: 'declined' },\n  { name: 'June', lastName: 'Mayer', email: 'jun@mayer.com', status: 'declined' },\n  { name: 'Charles', lastName: 'Power', email: 'charles@power.com', status: 'accepted' },\n]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Button>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Button>",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/components/layout/section/Section.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SectionComponent>",
                    "file": "src/app/components/layout/section/Section.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/components/ui/header/Header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "src/app/components/ui/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/components/ui/filter/Filter.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FilterComponent>",
                    "file": "src/app/components/ui/filter/Filter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/components/ui/sidebar/SideBar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SidebarComponent>",
                    "file": "src/app/components/ui/sidebar/SideBar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/dashboard",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "redirectTo": "/404"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/pages/pages.routing.ts",
                "module": "PagesRoutingModule",
                "children": [
                    {
                        "path": "dashboard",
                        "component": "PagesComponent",
                        "children": [
                            {
                                "path": "",
                                "component": "DashboardComponent"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/layout/base/base.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/layout/section/Section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/layout/section/Section.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/layout/section/section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/filter/Filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/filter/Filter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/filter/filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/filter/filter.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FilterStatusType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/SideBar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/SideBar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/ui/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/dashboard/dashboard.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Client",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/dashboard/dashboard.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/pages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            }
        ]
    }
}